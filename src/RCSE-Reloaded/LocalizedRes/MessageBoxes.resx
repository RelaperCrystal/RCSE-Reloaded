<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CloseNotSaved" xml:space="preserve">
    <value>此文件已更改，如不保存，您在 {time} 后所做的更改将丢失。是否保存？</value>
    <comment>{time} 是打开时间</comment>
  </data>
  <data name="CloseWindowsShutdown" xml:space="preserve">
    <value>请先保存后再关机。</value>
  </data>
  <data name="CompiledNotFound" xml:space="preserve">
    <value>编译器未能输出文件。有可能发生错误。</value>
  </data>
  <data name="EmptyTextBox" xml:space="preserve">
    <value>文本为空。请输入一些文本。</value>
  </data>
  <data name="FluentSave" xml:space="preserve">
    <value>Fluent Design 的设置需要在重启 {nameShort} 后生效。</value>
    <comment>{nameShort} = programShortName</comment>
  </data>
  <data name="FluentWarning" xml:space="preserve">
    <value> 当前正在使用 Fluent Design 中的亚克力特效，在 Windows Forms 中找不到相关文档。请在 文件 -&gt; 设置中关闭。</value>
  </data>
  <data name="InputDownload" xml:space="preserve">
    <value>请输入网络文件的地址。该文件必须能本地下载（不开启 JS 的浏览器）且为永久链接。</value>
  </data>
  <data name="InputDownloadFailed" xml:space="preserve">
    <value>打开文件失败。</value>
  </data>
  <data name="InputDownloadTitle" xml:space="preserve">
    <value>从网络打开</value>
  </data>
  <data name="NotImplemented" xml:space="preserve">
    <value>尚未实现</value>
  </data>
  <data name="NotMarkup" xml:space="preserve">
    <value>试图使用浏览器打开的文件不是 HTML 或 XML 文件。\r\n如果确实是上述文件，请将其后缀名变为对应的后缀名。</value>
  </data>
  <data name="PowerSavingON" xml:space="preserve">
    <value>节电模式已开启。部分功能会被禁用。</value>
  </data>
  <data name="PowerSavingPrint" xml:space="preserve">
    <value>在节电模式下不可以打印文件。</value>
  </data>
  <data name="PrintNotSaved" xml:space="preserve">
    <value>您必须先保存文件至少一次。</value>
  </data>
  <data name="SaveAsBoxTitle" xml:space="preserve">
    <value>另存为</value>
  </data>
  <data name="StatusDownload" xml:space="preserve">
    <value>从 Web 下载文件</value>
  </data>
  <data name="StatusReady" xml:space="preserve">
    <value>就绪</value>
  </data>
  <data name="TitleError" xml:space="preserve">
    <value>错误</value>
  </data>
  <data name="TitleWarning" xml:space="preserve">
    <value>警告</value>
  </data>
  <data name="ErrorReadConsoleFile" xml:space="preserve">
	  <value>无法从命令行解析文件。文件未找到。</value>
  </data>
  <data name="ErrorReadConsoleFileTitle" xml:space="preserve">
	  <value>控制台错误</value>
  </data>
</root>